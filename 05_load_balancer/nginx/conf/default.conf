# ロードバランサーの設定
upstream backend {
    # [振り分けアルゴリズム]
    # 指定なし: ラウンドロビンで順番にアクセスを振り分ける
    # ip_hash: 送信元IPアドレスが同じであれば、同じサーバーにアクセスを振り分ける
    # least_conn: アクティブな接続が最も少ないサーバーにアクセスを振り分ける
	# least_time: 平均レイテンシとアクティブな接続数をベースに振り分け先サーバーを決定する(NginxPlusでのみ利用可能)
    # random: 2台のサーバーを無作為に選出し、アクティブな接続数が少ない方にアクセスを振り分ける
    least_conn;
    # アクセス振り分け先と重み
    server host.docker.internal:3001 weight=1;
    server host.docker.internal:3002 weight=1;
    server host.docker.internal:3003 weight=1;
    server host.docker.internal:3004 weight=1;
}

server {
    listen       80;
    listen       [::]:80;
    server_name  localhost;

    # ルートドキュメントの設定
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # リバースプロキシ(ロードバランサー)の設定
    location /api {
        # 転送先：ロードバランサーの設定を指定
        proxy_pass                 http://backend;
        # 転送先のサーバーにクライアントが要求した本来のホスト名を通知するのに利用
        proxy_set_header           Host $host;
        proxy_set_header           X-Forwarded-Host $host;
        # 転送先のサーバーにクライアントのIPアドレスを通知するのに利用
        proxy_set_header           X-Real-IP $remote_addr;
        proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
        # 転送先のサーバーにリバースプロキシサーバーのホスト名を通知するのに利用
        proxy_set_header           X-Forwarded-Server $host;
        # 転送先のサーバーにクライアントがロードバランサー接続に利用したポート番号を通知するのに利用
        proxy_set_header           X-Forwarded-Port $server_port;
        # 転送先のサーバーにクライアントがロードバランサー接続に利用したプロトコルを通知するのに利用
        proxy_set_header           X-Forwarded-Proto $scheme;
        # 転送先のサーバーにすべてのHTTPヘッダーを転送する
        proxy_pass_request_headers on;
        # 転送先のサーバーがリダイレクトした際、リダイレクトヘッダーを変更せずにクライアントにそのまま転送する
        proxy_redirect             off;
    }
}